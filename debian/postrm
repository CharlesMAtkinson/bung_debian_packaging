#!/bin/bash

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    purge)
        rmdir /etc/bung || true
        ;&
    remove)
        rmdir /var/log/bung || true
        ;;
    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
        ;;
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
esac

# This deb-systemd-helper section should be generated by debhelper but
# * The debhelper tools for doing so were evolving ("dh_systemd_enable is no
#   longer used in compat >= 11, please use dh_installsystemd instead")
# * The requirement is to start and enable a non default named .timer and not
#   to start and enable the corresponding .service unit
# * No usage examples were found similar to the requirement
# * The probable solution is to
#   * Use dh_installsystemd with set --name=rm_old_logs
#   * Exclude the .service file by "using the -X common debhelper(1) option"
# * The probable solution was not explored because
#   * It would need possibly a lot of experimentation (the -X option was not
#     known)
#   * It would probably need to be re-developed with the next debhelper version
# * deb-systemd-helper mtime was Dec 2020 so almost two years unchanged
# * The template used for this deb-systemd-helper section was from 
#   https://github.com/Debian/debhelper > autoscripts > postrm-systemd with last
#   commit Jan 2018 so ~5 years unchanged

if [ "$1" = "remove" ]; then
    if [ -x "/usr/bin/deb-systemd-helper" ]; then
        deb-systemd-helper mask bung.rm_old_logs.timer >/dev/null || true
    fi
fi

if [ "$1" = "purge" ]; then
    if [ -x "/usr/bin/deb-systemd-helper" ]; then
        deb-systemd-helper purge bung.rm_old_logs.timer >/dev/null || true
        deb-systemd-helper unmask bung.rm_old_logs.timer >/dev/null || true
    fi
fi

#DEBHELPER#
