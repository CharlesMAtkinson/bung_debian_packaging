#!/bin/bash

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
        dir=/var/log/bung
        mkdir -p "$dir"
        chown root:adm "$dir"
        ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# This deb-systemd-helper section should be generated by debhelper but
# * The debhelper tools for doing so were evolving ("dh_systemd_enable is no
#   longer used in compat >= 11, please use dh_installsystemd instead")
# * The requirement is to start and enable a non default named .timer and not
#   to start and enable the corresponding .service unit
# * No usage examples were found similar to the requirement
# * The probable solution is to
#   * Use dh_installsystemd with set --name=rm_old_logs
#   * Exclude the .service file by "using the -X common debhelper(1) option"
# * The probable solution was not explored because
#   * It would need possibly a lot of experimentation (the -X option was not
#     known)
#   * It would probably need to be re-developed with the next debhelper version
# * deb-systemd-helper mtime was Dec 2020 so almost two years unchanged
# * The template used for this deb-systemd-helper section was from 
#   https://github.com/Debian/debhelper > autoscripts > postinst-systemd-enable
#   with last commit Jan 2018 so ~5 years unchanged

# Docs: https://github.com/Debian/debhelper > autoscripts
# > postinst-systemd-enable
# > postinst-systemd-start

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
    # This will only remove masks created by d-s-h on package removal.
    deb-systemd-helper unmask bung.rm_old_logs.timer >/dev/null || true

    # was-enabled defaults to true, so new installations run enable.
    if deb-systemd-helper --quiet was-enabled bung.rm_old_logs.timer; then
        # Enables the unit on first installation, creates new
        # symlinks on upgrades if the unit file has changed.
        deb-systemd-helper enable bung.rm_old_logs.timer >/dev/null || true
    else
        # Update the statefile to add new symlinks (if any), which need to be
        # cleaned up on purge. Also remove old symlinks.
        deb-systemd-helper update-state bung.rm_old_logs.timer >/dev/null || true
    fi

    if [ -d /run/systemd/system ]; then
        systemctl --system daemon-reload >/dev/null || true
        deb-systemd-invoke start bung.rm_old_logs.timer >/dev/null || true
    fi
fi

#DEBHELPER#
